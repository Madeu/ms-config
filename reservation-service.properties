server.port=${PORT:8000}
message = Soh os troxas conseguem ler isso!!    >.<

#zipkin
spring.zipkin.host=192.168.99.100
spring.zipkin.base-url=http://192.168.99.100:9411

# define the destination to which the input MessageChannel should be bound
spring.cloud.stream.bindings.input.destination = reservations

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
spring.cloud.stream.bindings.input.group = reservations-group

# ensure that the Q is durable
spring.cloud.stream.bindings.input.durableSubscription = true

#rabbitmq host for docker
spring.rabbitmq.host=192.168.99.100
spring.rabbitmq.port=32772

## Rabbit specific binder bits
#spring.cloud.stream.binder.rabbit.default.default-delivery-mode=persistent
#spring.cloud.stream.binder.rabbit.default.acknowledge-mode=manual
#spring.cloud.stream.binder.rabbit.default.durable-subscription=true
#spring.cloud.stream.binder.rabbit.default.transacted=true
#spring.cloud.stream.binder.rabbit.default.default-requeue-rejected=true
#spring.cloud.stream.binder.rabbit.default.auto-bind-dlq=true
#spring.cloud.stream.binder.rabbit.default.republish-to-dlq=true

#Eureka data for Docker
eureka.instance.hostname=${vcap.application.uris[0]:localhost}
eureka.instance.nonSecurePort=8761

#MongoDb data for docker
db.host.port=32781
db.host.name=192.168.99.100
